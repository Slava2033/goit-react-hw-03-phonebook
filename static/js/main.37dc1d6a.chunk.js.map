{"version":3,"sources":["components/Filter/filter.module.css","components/ContactForm/form.module.css","components/ContactList/contactList.module.css","components/ContactForm/contactForm.js","components/ContactList/contactList.js","components/Filter/filter.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactForm","state","name","number","contactNameId","shortid","generate","contactNumberId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","s","form","label","htmlFor","input","type","onChange","id","button","Component","ContactList","contacts","onDeleteContact","list","map","listItem","listItemText","onClick","Filter","filterLabel","filterInput","App","filter","addContact","find","contact","alert","newContact","changeFilter","target","getVisibleContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","localStorage","getItem","parsedContacts","JSON","parse","prevState","console","log","setItem","stringify","visibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37dc1d6a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"filter_filterLabel__2UzJp\",\"filterInput\":\"filter_filterInput__ahQpi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__1vr0y\",\"label\":\"form_label__dO44h\",\"input\":\"form_input__36cGV\",\"button\":\"form_button__1Dn8Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contactList_list__1k-g4\",\"listItem\":\"contactList_listItem__1qA2x\",\"listItemText\":\"contactList_listItemText__1jvEx\",\"button\":\"contactList_button__2JTne\"};","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport s from './form.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  contactNameId = shortid.generate();\n  contactNumberId = shortid.generate();\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    const { name, number } = this.state;\n    e.preventDefault();\n    this.props.onSubmit(name, number);\n    this.reset();\n  };\n\n  reset() {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  }\n\n  render() {\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label className={s.label} htmlFor={this.contactNameId}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            id={this.contactNameId}\n          />\n        </label>\n        <label className={s.label} htmlFor={this.contactNumberId}>\n          Number\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n            id={this.contactNumberId}\n          />\n        </label>\n\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './contactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className={s.list}>\n    {contacts.map(({ id, name, number }) => (\n      <li className={s.listItem} key={id}>\n        <span className={s.listItemText}>{name}:</span>\n        <span className={s.listItemText}>{number}</span>\n        <button\n          className={s.button}\n          type=\"button\"\n          onClick={() => onDeleteContact(id)}\n        >\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={s.filterLabel}>\n    Find contacts by name\n    <input\n      className={s.filterInput}\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\n\nimport ContactForm from './components/ContactForm/contactForm';\nimport ContactList from './components/ContactList/contactList';\nimport Filter from './components/Filter/filter';\nimport './app.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    const { contacts } = this.state;\n\n    if (contacts !== prevState.contacts) {\n      console.log('contacts were updated');\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  addContact = (name, number) => {\n    const { contacts } = this.state;\n\n    if (name === '') {\n      alert(`Введите, пожалуйста, имя контакта.`);\n      return;\n    }\n\n    if (number === '') {\n      alert(`Введите, пожалуйста, номер телефона контакта.`);\n      return;\n    }\n\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n  };\n\n  changeFilter = ({ target }) => {\n    this.setState({ filter: target.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}